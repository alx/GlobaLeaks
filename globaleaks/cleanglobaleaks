#!/bin/sh

blue="\033[1;33m"
blue="\033[1;34m"
violet="\033[1;35m"
red="\033[1;31m"
green="\033[1;32m"

fancy_quit() {
    tput sgr0
    exit
}

help() {
    echo "${blue}This utility restore your directory to the not yet configured status of GlobaLeaks"
    echo "It's useful when:"
    echo "1]  you want delete all the data, and restore the node as freshly downloaded software (use option 'complete')."
    echo "2]  you want to commit via git (use option 'commit')."
    echo "3]  you want to clean your databases (use option 'database')."
    echo "${violet}To start the cleaning: run $0 [complete|database|commit]"
    fancy_quit
}

path_fix() {
    echo "${blue}checking directory..."
    if [ -d $INSTORG ]; then
        echo "   ${green}$PWD: ${blue}ok"
    else
        echo "   ${red}$PWD: run this script without a prefix path"; fancy_quit
    fi
}

clean_database() {
    echo "${blue}removing databases..."
    # python -c "import os; os.removedirs('applications/globaleaks/databases')"
    # don't work for i in glob.glob(): os.unlink, but is the portable way to follow
    rm -f applications/globaleaks/databases/*
    echo "${green}   done"
}

clean_commit() {
    echo "${blue}restoring pre install files..."
    cp -f defaults/original.globaleaks.conf globaleaks.conf
    echo "${green}   done"
}

clean_complete() {

    clean_database
    clean_commit

    echo "${blue}deleting the material, sessions, etc..."
    rm -rf applications/globaleaks/sessions/*
    rm -rf applications/globaleaks/material/*
    rm -rf applications/globaleaks/uploads/*

    echo "${blue}deleting .pyc files..."
    find . -type f -name '*.pyc' -delete

    echo "${green}   done"
}

if [ $# -lt 1 ]; then
    help
fi

if [ $1 = "complete" ]; then
    clean_complete; fancy_quit
fi
if [ $1 = "database" ]; then
    clean_database; fancy_quit
fi
if [ $1 = "commit" ]; then
    clean_commit; fancy_quit
fi

help
