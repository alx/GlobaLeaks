(dp1
S'output'
p2
S''
sS'layer'
p3
S'/Users/hellais/Documents/code/globaleaks/ddb/apps/applications/init/controllers/default.py'
p4
sS'code'
p5
S'# -*- coding: utf-8 -*-\n### required - do no delete\ndef user(): return dict(form=auth())\ndef download(): return response.download(request,db)\ndef call():\n    session.forget()\n    return service()\n### end requires\ndef index():\n    return dict(message=T("Diocane"))\n\ndef submission():\n    """form = FORM(\'Your name:\', INPUT(_name=\'Title\',requires=IS_NOT_EMPTY()),\n            \'Tags:\', INPUT(_name=\'Tags\',requires=IS_NOT_EMPTY()),\n            \'Description:\', INPUT(_name=\'Description\',requires=IS_NOT_EMPTY()),\n            \'Files:\', INPUT(_name=\'Files\'), \n            INPUT(_type=\'submit\')\n            )\n    \n    if form.accepts(request.vars, session):\n        response.flash = \'form accepted\'\n    elif form.errors:\n        response.flash = \'form has errors\'\n    else:\n        response.flash = \'please fill the form\'\n    """\n    \n    form = SQLFORM.factory(\n        Field(\'Title\', requires=IS_NOT_EMPTY()),\n        Field(\'Description\', requires=IS_NOT_EMPTY()),\n        Field(\'Tags\'),\n        Field(\'your_image\', \'upload\'))\n        \n    form = SQLFORM(db.leak)\n    \n    \n    \n    return dict(form=form)\n\ndef error():\n    return dict()\n\nresponse._vars=response._caller(submission)\n'
p6
sS'snapshot'
p7
(dp8
sS'traceback'
p9
S'Traceback (most recent call last):\n  File "/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/gluon/restricted.py", line 192, in restricted\n    exec ccode in environment\n  File "/Users/hellais/Documents/code/globaleaks/ddb/apps/applications/init/controllers/default.py", line 43, in <module>\n  File "/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/gluon/globals.py", line 145, in <lambda>\n    self._caller = lambda f: f()\n  File "/Users/hellais/Documents/code/globaleaks/ddb/apps/applications/init/controllers/default.py", line 34, in submission\n    form = SQLFORM(db.leak)\n  File "/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/gluon/dal.py", line 4331, in __getattr__\n    return self[key]\n  File "/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/gluon/dal.py", line 4325, in __getitem__\n    return dict.__getitem__(self, str(key))\nKeyError: \'leak\'\n'
p10
s.